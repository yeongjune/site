<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
<log4j:configuration xmlns:log4j='http://jakarta.apache.org/log4j/'>
    
    <!-- ========================== 自定义输出格式说明================================ -->  
    <!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->  
    <!-- #%r 输出自应用启动到输出该log信息耗费的毫秒数  -->  
    <!-- #%c 输出所属的类目，通常就是所在类的全名 -->  
    <!-- #%t 输出产生该日志事件的线程名 -->  
    <!-- #%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” -->  
    <!-- #%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921  -->  
    <!-- #%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)  -->  
    <!-- ========================================================================== -->  
      
    <!-- ========================== 输出方式说明================================ -->  
    <!-- Log4j提供的appender有以下几种:  -->  
    <!-- org.apache.log4j.ConsoleAppender(控制台),  -->  
    <!-- org.apache.log4j.FileAppender(文件),  -->  
    <!-- org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件), -->  
    <!-- org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件),  -->  
    <!-- org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方)   -->  
	<!-- ========================================================================== --> 
	
	<!-- 输出到控制台的格式配置 -->
    <appender name="consoleLog" class="org.apache.log4j.ConsoleAppender">
         <param name="Threshold" value="debug"></param> 
        <layout class="org.apache.log4j.TTCCLayout">			<!-- 设置输出日志内容格式 -->
           <param name="ConversionPattern" value="%d [%t] %-5p [%c] - %m%n" />
        </layout>
    </appender>
    
    <!-- 输出到日志文件的格式配置,每天一个日志文件 -->
    <appender name="fileLog" class="org.apache.log4j.DailyRollingFileAppender"> 
	  <!-- 设置通道file和输出方式：org.apache.log4j.RollingFileAppender  --> 
	  <param name="Threshold" value="info" />
	  <param name="File" value="E:/activex.log" />         
        <param name="DatePattern" value="'.'yyyy-MM-dd'.log'" />  
	  <layout class="org.apache.log4j.PatternLayout"> 			<!-- 设置输出日志内容格式 -->
			<!-- <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss,SSS} [%p] %l %m%n" /> -->
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] {%c:%L}-%m%n"></param>  
	  </layout> 
	</appender>
	
    <!-- 输出到数据库的格式配置 -->
    <appender name="databaseLog" class="org.apache.log4j.jdbc.JDBCAppender">
      <param name="Threshold" value="error"></param>  
	  <param name="URL" value="jdbc:mysql://172.172.172.9:3306"/>  
	  <param name="driver" value="com.mysql.jdbc.Driver"/>  
	  <param name="user" value="riicy"/>  
	  <param name="password" value="123456"/>      
	  <layout class="org.apache.log4j.PatternLayout">  
	   <param name="ConversionPattern" value="INSERT INTO system_log4j(createTime,thread, infoLevel,className,message,ip) VALUES (now(), '%t', '%p', '%c', '%l%n%m','%X{ip}')" />  
	  </layout>  
	 </appender> 
	 
    
    <!-- 发邮件的日志文件格式配置 -->  
	 <appender name="mailLog"   class="org.apache.log4j.net.SMTPAppender">  
	  <param name="Threshold" value="error"></param>	<!-- 日志的错误级别，配置只有fatal时才会发送,也可以配置ERROR级别！ -->
	  <param name="BufferSize" value="300" />	<!-- 缓存文件大小，日志达到300K时发送Email，单位K   -->
	  <param name="From" value="vip@iliubang.com" />  
	  <param name="SMTPHost" value="smtp.exmail.qq.com" />  
	  <param name="Subject" value="找客异常信息[SuperResume-log4j]" />  
	  <param name="To" value="6365385@qq.com" />  
	  <param name="SMTPUsername" value="vip@iliubang.com" />  
	  <param name="SMTPPassword" value="riicy6868" />  
	  <layout class="org.apache.log4j.PatternLayout">  
	   <param name="ConversionPattern"  value="%-d{yyyy-MM-dd HH:mm:ss.SSS} [%p]-[%c] %m%n" />  
	  </layout>  
	 </appender> 
 
	
    <!-- 针对包设置输出日志级别 -->
    
     <!-- 后台管理日志输出级别 -->
    <logger name="com.phone.action">
        <level value="info" />
    </logger>
    
    <!-- 全局级别输出设置，会被上面的特制配置覆盖 -->
    <root>
    	<level value="info" />					<!-- 全局的输出级别，测试环境建议设置为info 或 warn，真实环境建议设置为error -->
		<appender-ref ref="consoleLog" />		<!-- 控制台输出 -->
		<appender-ref ref="fileLog" />					<!-- 写入日志文件 -->
		<!-- <appender-ref ref="databaseLog" /> -->				<!-- 写入数据库 -->
		<!-- <appender-ref ref="mailLog" /> -->					<!-- 发送到邮件 -->	
    </root>
</log4j:configuration>
