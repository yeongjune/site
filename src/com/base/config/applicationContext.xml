<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<context:annotation-config />
	<!-- ***********************模板引擎配置2********************** -->
	<mvc:annotation-driven />
	<context:component-scan base-package="com.*.dao.impl" />
	<context:component-scan base-package="com.*.service.impl" />
	<context:component-scan base-package="com.*.action" />
	<context:component-scan base-package="com.*.excel.impl" />
	<context:component-scan base-package="com.tag.*" />

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:com/base/config/jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 使用Druid 带有监控的数据池，可以检测sql、session、url请求，看评测数据池效率是c3p0的几十倍 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
		<!-- 基本属性 url、user、password -->
	     <property name="url" value="${library.master.jdbc.url}" />
	     <property name="username" value="${library.master.jdbc.username}" />
	     <property name="password" value="${library.master.jdbc.password}" />
	
	
		<!-- 配置初始化大小、最小、最大 -->
	     <property name="maxActive" value="20" />
	     <property name="initialSize" value="1" />
	     <property name="minIdle" value="1" />

		<!-- 配置获取连接等待超时的时间 -->	
	     <property name="maxWait" value="60000" />
	     
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	     <property name="timeBetweenEvictionRunsMillis" value="60000" />
	     
	     <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	     <property name="minEvictableIdleTimeMillis" value="300000" />
	
	     <property name="validationQuery" value="SELECT 'x'" />
	     <property name="testWhileIdle" value="true" />
	     <property name="testOnBorrow" value="false" />
	     <property name="testOnReturn" value="false" />
	
	     <!-- 配置监控统计拦截的filters -->
	     <property name="filters" value="stat" />
	     <property name="connectionProperties" value="druid.stat.mergeSql=true" />
	     
	     <!-- 配置公用监控数据 -->
	     <property name="useGloalDataSourceStat" value="true" />
	     
	     <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	      <property name="poolPreparedStatements" value="false" />
	      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	 </bean>
	
	<!-- 慢sql记录 -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
	    <property name="slowSqlMillis" value="1000" />
	    <property name="logSlowSql" value="true" />
	</bean>
	
	<!-- 拦截监控方法 -->
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor" />
	
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut"
	    scope="prototype">
	    <property name="patterns">
	        <list>
	            <value>com.*.service.*</value>
	            <value>com.*.dao.*</value>
	        </list>
	    </property>
	</bean>
	
	<aop:config>
	    <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
	</aop:config>
	
	
	<bean id="contextAware" class="com.base.util.ContextAware" />
	<!--定义了Hibernate的SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.*.model" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">com.base.util.ExtMysqlDialect</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
			</props>
		</property>
	</bean>

 
	<!-- 强制使用CGLIB生成代理 主要是字符编码方面 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 配置事务的传播特性 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		    <tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="process*" propagation="REQUIRED" />
			<tx:method name="execute*" propagation="REQUIRED" />
			<tx:method name="reset*" propagation="REQUIRED" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="managerMethod" expression="execution(* com.*.service.*.*(..))" />
		<aop:advisor pointcut-ref="managerMethod" advice-ref="transactionAdvice" />
	</aop:config>
	
	<bean id="customHandlerExceptionResolver" class="com.base.interceptor.CustomHandlerExceptionResolver" >
	    <property name="order" value="1"></property>
	</bean>
	<import resource="applicationContext-quartz.xml"/>
</beans>